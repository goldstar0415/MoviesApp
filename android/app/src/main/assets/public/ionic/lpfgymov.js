/*!
 * (C) Ionic http://ionicframework.com - MIT License
 * Built with http://stenciljs.com
 */
const{h:e}=window.Ionic;class r{constructor(){this.readyPromise=new Promise(e=>this.readyResolve=e)}ready(){return this.readyPromise}deviceReadyHandler(){this.readyResolve()}exitCordovaApp(){const e=window.navigator.app;e&&e.exitApp&&e.exitApp()}static get is(){return"ion-cordova-platform"}static get properties(){return{exitCordovaApp:{method:!0},ready:{method:!0}}}static get listeners(){return[{name:"document:deviceready",method:"deviceReadyHandler"},{name:"body:exitApp",method:"exitCordovaApp"}]}}function t(){const e=window;return!!(e[o]||e[n]||e[a]||e[i])}const o="cordova",a="phonegap",n="PhoneGap",i="Capacitor";class s{is(e){for(const r of this._platforms)if(r.name===e)return!0;return!1}platforms(){return this._platforms.map(e=>e.name)}versions(){return this._platforms}isLandscape(){return!this.isPortrait()}isPortrait(){return window.matchMedia("(orientation: portrait)").matches}ready(){if(t()){const e=this.el.querySelector("ion-cordova-plaform");return e.componentOnReady().then(()=>e.ready())}return Promise.resolve()}getQueryParam(e){return this.readQueryParam(window.location.href,e)}render(){return[t()&&e("ion-cordova-platform",null)]}static get is(){return"ion-platform"}static get properties(){return{_platforms:{context:"platforms"},el:{elementRef:!0},getQueryParam:{method:!0},is:{method:!0},isLandscape:{method:!0},isPortrait:{method:!0},platforms:{method:!0},readQueryParam:{context:"readQueryParam"},ready:{method:!0},versions:{method:!0}}}}export{r as IonCordovaPlatform,s as IonPlatform};