{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/providers/movies-service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var map = {\n\t\"./pages/detail/detail.module\": [\n\t\t\"./src/app/pages/detail/detail.module.ts\",\n\t\t\"pages-detail-detail-module\"\n\t],\n\t\"./pages/home/home.module\": [\n\t\t\"./src/app/pages/home/home.module.ts\",\n\t\t\"pages-home-home-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\tvar module = __webpack_require__(ids[0]);\n\t\treturn module;\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n    { path: '', redirectTo: '/home', pathMatch: 'full' },\n    { path: 'home', loadChildren: './pages/home/home.module#HomeModule' },\n    { path: 'detail/:title', loadChildren: './pages/detail/detail.module#DetailModule' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<ion-app>\\n  <ion-router-outlet main animate=\\\"false\\\"></ion-router-outlet>\\n</ion-app>\\n\"","import { Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { IonicModule } from '@ionic/angular';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { AppComponent } from './app.component';\n\nimport { MoviesService } from './providers/movies-service';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    IonicModule.forRoot()\n  ],\n  providers: [MoviesService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { timeout, retryWhen, delay, map } from 'rxjs/operators';\n\nimport { Movie } from '../models/movie.model';\n\n@Injectable()\nexport class MoviesService {\n\n  private readonly URL_BASE: string = 'http://localhost:3000/';\n\n  constructor(private http: HttpClient) {\n  }\n\n  getMovies(start: number, end: number): Observable<Movie[]> {\n    return this.http\n    // Type-checking the response => .get<Movie[]>\n    .get<Movie[]>(this.URL_BASE + `movies?_start=${start}&_end=${end}`)\n    .pipe(\n      retryWhen(error => error.pipe(delay(500))),\n      timeout(5000)\n    );\n  }\n\n  getMovie(title: string): Observable<Movie> {\n    console.log(encodeURI(this.URL_BASE + `movies?title=${title}`));\n    return this.http\n    // Type-checking the response => .get<Movie>\n    .get<Movie>(encodeURI(this.URL_BASE + `movies?title=${title}`))\n    .pipe(\n      retryWhen(error => error.pipe(delay(500))),\n      timeout(5000)\n    );\n  }\n}\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}